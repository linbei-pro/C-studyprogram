class Complex
{
public:
	Complex()
	{
		real=0;
		imag = 0;
	}
	Complex(double r, double i)
	{
		real = r;
		imag = i;
	}
	Complex operator+(Complex& c2);   //声明重载运算符“+”的函数
                                    //重载函数作为成员函数，可以少写一个参数
	void display();

private:
	double real;
	double imag;
};

Complex Complex::operator+(Complex& c2)  //定义重载运算符 ， 返回类型为Complex类
{
	Complex c;
	c.real = real + c2.real;           //实现两个复数的实部的相加
	c.imag = imag + c2.imag;

	return c;
}

void Complex::display()
{
	cout << "(" << real << "," << imag << ")" << endl;
}

int main()
{
	Complex c1(2.3, 3.4);
	Complex c2(4.4, 5.6);
	Complex c3;

	c3 = c1 + c2;

	c3.display();


	return 0;
}
